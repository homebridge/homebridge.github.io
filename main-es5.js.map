{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/api-reference-entry/api-reference-entry.component.ts","webpack:///src/app/api-reference-entry/api-reference-entry.component.html","webpack:///src/app/api-reference/api-reference.component.ts","webpack:///src/app/api-reference/api-reference.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/characteristic/characteristic.component.ts","webpack:///src/app/characteristic/characteristic.component.html","webpack:///src/app/hap.service.ts","webpack:///src/app/introduction/introduction.component.ts","webpack:///src/app/introduction/introduction.component.html","webpack:///src/app/search/search.component.ts","webpack:///src/app/search/search.component.html","webpack:///src/app/service/service.component.ts","webpack:///src/app/service/service.component.html","webpack:///src/app/sidebar/sidebar.component.ts","webpack:///src/app/sidebar/sidebar.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","ApiReferenceEntryComponent","selector","templateUrl","styleUrls","ApiReferenceComponent","currentRoute","params","subscribe","anchor","setTimeout","el","document","getElementById","window","scrollTo","offsetTop","offsetHeight","routes","path","component","redirectTo","AppRoutingModule","forRoot","useHash","scrollPositionRestoration","imports","AppComponent","hapService","router","events","event","innerWidth","sidebar","classList","contains","remove","add","AppModule","declarations","bootstrap","CharacteristicComponent","titleService","paramMap","characteristicName","get","characteristic","getCharacteristicsByName","usedBy","getServiceTypesUsedByCharacteristic","UUID","setTitle","props","perms","map","x","join","HapService","httpClient","ready","pr","pw","ev","aa","tw","hd","wr","load","all","toPromise","services","characteristics","serviceName","find","name","uuid","required","filter","requiredCharacteristics","includes","optional","optionalCharacteristics","concat","providedIn","IntroductionComponent","SearchComponent","searchProvider","observer","next","query","pipe","toLocaleLowerCase","matchingServices","displayName","toLowerCase","indexOf","matchingCharacteristics","results","push","routerLink","label","navigate","item","onSelect","ServiceComponent","service","getServiceByName","getCharacteristicsByUUID","generateExample","exampleCode","generateRequiredBindings","generateMethods","generateGetHandler","generateSetHandler","value","generateGetMethod","generateSetMethod","SidebarComponent","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-api-reference-entry',\n  templateUrl: './api-reference-entry.component.html',\n  styleUrls: ['./api-reference-entry.component.scss']\n})\nexport class ApiReferenceEntryComponent implements OnInit {\n  @Input() method;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h3 [id]=\"method\">{{ method }} <a [routerLink]=\"['/reference', method]\"><i class=\"fa fa-link\"></i></a></h3>\n<ng-content></ng-content>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-api-reference',\n  templateUrl: './api-reference.component.html',\n  styleUrls: ['./api-reference.component.scss']\n})\nexport class ApiReferenceComponent implements OnInit {\n\n  constructor(\n    private currentRoute: ActivatedRoute,\n  ) { }\n\n  ngOnInit(): void {\n    this.currentRoute.params.subscribe((params) => {\n      if (params.anchor) {\n        setTimeout(() => {\n          const el = document.getElementById(params.anchor);\n          window.scrollTo(0, el.offsetTop + el.offsetHeight - 40)\n        });\n      }\n    });\n  }\n\n  get registerAccessoryExample() {\n    return `module.exports = (api) => {\n  api.registerAccessory('ExampleAccessoryName', ExampleAccessoryPlugin);\n}\n\nclass ExampleAccessoryPlugin {\n  constructor(log, config, api) {\n    log.debug('Example Accessory Plugin Loaded');\n  }\n}`\n  }\n\n  get registerPlatformExample() {\n    return `module.exports = (api) => {\n  api.registerPlatform('ExamplePlatformName', ExamplePlatformPlugin);\n}\n\nclass ExamplePlatformPlugin {\n  constructor(log, config, api) {\n    log.debug('Example Platform Plugin Loaded');\n  }\n}`\n  }\n\n  get registerPlatformAccessoriesExample() {\n    return `class ExamplePlatformPlugin {\n  constructor(log, config, api) {\n\n    // store restored cached accessories here\n    this.accessories = [];\n\n    /**\n     * Platforms should wait until the \"didFinishLaunching\" event has fired before\n     * registering any new accessories.\n     */\n    api.on('didFinishLaunching', () => {\n      const uuid = api.hap.uuid.generate('SOMETHING UNIQUE');\n\n      // check the accessory was not restored from cache\n      if (!this.accessories.find(accessory => accessory.UUID === uuid)) {\n\n        // create a new accessory\n        const accessory = new this.api.platformAccessory('DISPLAY NAME', uuid);\n\n        // register the accessory\n        api.registerPlatformAccessories('PLUGIN_NAME', 'PLATFORM_NAME', [accessory]);\n      }\n    });\n  }\n\n  /**\n   * Homebridge will call the \"configureAccessory\" method once for every cached\n   * accessory restored\n   */\n  configureAccessory(accessory) {\n    this.accessories.push(accessory);\n  }\n}`\n  }\n\n  get unregisterPlatformAccessoriesExample() {\n    return `class ExamplePlatformPlugin {\n  constructor(log, config, api) {\n\n    // store restored cached accessories here\n    this.accessories = [];\n\n    /**\n     * Platforms should wait until the \"didFinishLaunching\" event has fired before\n     * registering any new accessories.\n     */\n    api.on('didFinishLaunching', () => {\n      // for the example just remove the first restored cached accessory\n      const accessory = this.accessories[0];\n\n      api.unregisterPlatformAccessories('PLUGIN_NAME', 'PLATFORM_NAME', [accessory]);\n    });\n  }\n\n  /**\n   * Homebridge will call the \"configureAccessory\" method once for every cached\n   * accessory restored\n   */\n  configureAccessory(accessory) {\n    this.accessories.push(accessory);\n  }\n}`\n  }\n\n  get userStoragePathExample() {\n    return `class ExamplePlatformPlugin {\n  constructor(log, config, api) {\n    const storagePath = api.user.storagePath();\n  }\n}`\n  }\n\n  get userConfigPathExample() {\n    return `class ExamplePlatformPlugin {\n  constructor(log, config, api) {\n    const configPath = api.user.configPath();\n  }\n}`\n  }\n\n  get hapServiceExample() {\n    return `class ExamplePlatformPlugin {\n  constructor(log, config, api) {\n    this.api = api;\n\n    const accessory = new this.api.platformAccessory('DISPLAY NAME', uuid);\n\n    // get the LightBulb service if it exists\n    let service = accessory.getService(this.api.hap.Service.Lightbulb);\n\n    // otherwise create a new LightBulb service\n    if (!service) {\n      service = accessory.addService(this.api.Service.Lightbulb);\n    }\n  }\n}`\n  }\n\n  get hapAddServiceSubtypeExample() {\n    return `const service1 = accessory.addService(Service.Lightbulb, 'Light Bulb 1', 'USER_DEFINED_SUBTYPE');`\n  }\n\n  get hapGetServiceExample() {\n    return `const service = accessory.getService(this.api.hap.Service.Lightbulb);`\n  }\n\n\n  get hapGetServiceSubtypeExample() {\n    return `const service1 = accessory.getService('Light Bulb 1');`\n  }\n\n  get platformAccessoryExample() {\n    return `class ExamplePlatformPlugin {\n  constructor(log, config, api) {\n    this.api = api;\n\n    const uuid = this.api.hap.uuid.generate('SOMETHING UNIQUE');\n    const accessory = new this.api.platformAccessory('DISPLAY NAME', uuid);\n  }\n}`\n  }\n\n  get platformAccessoryContextExample() {\n    return `class ExamplePlatformPlugin {\n  constructor(log, config, api) {\n    this.api = api;\n\n    const uuid = this.api.hap.uuid.generate('SOMETHING UNIQUE');\n    const accessory = new this.api.platformAccessory('DISPLAY NAME', uuid);\n\n    // data stored on the context object will persist through restarts\n    accessory.context.myData = 'anything';\n  }\n}`\n  }\n\n  get serviceGetCharacteristicExample() {\n    return `service.getCharacteristic(Characteristic.Brightness);`\n  }\n\n  get serviceSetCharacteristicExample() {\n    return `service.setCharacteristic(Characteristic.Name, 'Light Bulb 1');`\n  }\n\n\n  get serviceUpdateCharacteristicExample() {\n    return `service.updateCharacteristic(Characteristic.Brightness, 60);`\n  }\n\n}\n","<article class=\"docs-article\" id=\"section-1\">\n  <header class=\"docs-header\">\n    <h1>API Reference</h1>\n  </header>\n\n      <div class=\"callout-block callout-block-warning\">\n        <div class=\"content\">\n          <h4 class=\"callout-title\">\n            <span class=\"callout-icon-holder mr-1\">\n              <i class=\"fas fa-info-circle\"></i>\n            </span>\n            Note\n          </h4>\n          <p>\n            This is a summary of the most commonly used API methods you will need when creating plugins. It is by no means comprehensive.\n          </p>\n        </div>\n      </div>\n\n  <section>\n\n    <app-api-reference-entry method=\"API.registerAccessory\">\n    <p class=\"text-info\">\n      API.registerAccessory(accessoryName: string, constructor: AccessoryPluginConstructor): void\n    </p>\n    <p>\n      Register a \"Accessory\" type plugin. Accessory style plugins only expose a single accessory, \n      but can be configured multiple times in the Homebridge config.json (once per accessory the user wants to create).\n    </p>\n    <pre><code [languages]=\"['javascript']\" [highlight]=\"registerAccessoryExample\"></code></pre>\n    </app-api-reference-entry>\n\n    <app-api-reference-entry method=\"API.registerPlatform\">\n      <p class=\"text-info\">\n        API.registerPlatform(platformName: string, constructor: PlatformPluginConstructor): void\n      </p>\n      <p>\n        Register a \"Platform\" type plugin. Platform style plugins can expose any number of accessories and can\n        dynamically remove and add accessories at any time. Only a single instance of a given platform may be configured in\n        the Homebridge config.json.\n      </p>\n      <pre><code [languages]=\"['javascript']\" [highlight]=\"registerPlatformExample\"></code></pre>\n    </app-api-reference-entry>\n\n    <app-api-reference-entry method=\"API.registerPlatformAccessories\">\n      <p class=\"text-info\">\n        API.registerPlatformAccessories(pluginIdentifier: string, platformName: string, accessories: PlatformAccessory[]): void\n      </p>\n      <p>For use in Platform plugins only.</p>\n      <p>\n        Publish one or more accessories to Homebridge.\n      </p>\n      <pre><code [languages]=\"['javascript']\" [highlight]=\"registerPlatformAccessoriesExample\"></code></pre>\n    </app-api-reference-entry>\n\n    <app-api-reference-entry method=\"API.unregisterPlatformAccessories\">\n      <p class=\"text-info\">\n        API.unregisterPlatformAccessories(pluginIdentifier: string, platformName: string, accessories: PlatformAccessory[]):\n        void\n      </p>\n      <p>For use in Platform plugins only.</p>\n      <p>\n        Remove one or more accessories from Homebridge.\n      </p>\n      <pre><code [languages]=\"['javascript']\" [highlight]=\"unregisterPlatformAccessoriesExample\"></code></pre>\n    </app-api-reference-entry>\n\n    <app-api-reference-entry method=\"API.publishExternalAccessories\">\n      <p class=\"text-info\">\n        API.publishExternalAccessories(pluginIdentifier: string, accessories: PlatformAccessory[]): void\n      </p>\n      <p>For use in Platform plugins only.</p>\n      <p>\n        Accessories published externally will need to be paired seperately by the user. Common uses for external accessories include Cameras and TVs.\n      </p>\n    </app-api-reference-entry>\n\n    <app-api-reference-entry method=\"API.updatePlatformAccessories\">\n      <p class=\"text-info\">\n        API.updatePlatformAccessories(accessories: PlatformAccessory[]): void\n      </p>\n      <p>For use in Platform plugins only.</p>\n    </app-api-reference-entry>\n\n    <app-api-reference-entry method=\"API.on\">\n      <p class=\"text-info\">\n        API.on(event: \"didFinishLaunching\", listener: () => void): API\n      </p>\n      <p>\n        When this event is fired it means Homebridge has restored all cached accessories from disk.\n        Dynamic Platform plugins should only register new accessories after this event has fired in\n        order to ensure they weren't already added to Homebridge. This event can also be used\n        to start discovery of new accessories.\n      </p>\n    </app-api-reference-entry>\n\n    <app-api-reference-entry method=\"API.user.storagePath\">\n      <p class=\"text-info\">\n        User.storagePath(): string\n      </p>\n      <p>\n        Returns the path to the Homebridge storage folder.\n      </p>\n      <pre><code [languages]=\"['javascript']\" [highlight]=\"userStoragePathExample\"></code></pre>\n    </app-api-reference-entry>\n\n    <app-api-reference-entry method=\"API.user.configPath\">\n      <p class=\"text-info\">\n        User.configPath(): string\n      </p>\n      <p>\n        Returns the path to the Homebridge config.json file.\n      </p>\n      <pre><code [languages]=\"['javascript']\" [highlight]=\"userConfigPathExample\"></code></pre>\n    </app-api-reference-entry>\n\n    <app-api-reference-entry method=\"API.version\">\n      <p class=\"text-info\">\n        API.version: number\n      </p>\n      <p>\n        Returns the current Homebridge API version. Note that this is different from the Homebridge package version.\n      </p>\n    </app-api-reference-entry>\n\n    <app-api-reference-entry method=\"API.platformAccessory\">\n      <p class=\"text-info\">\n        API.platformAccessory(displayName: string, uuid: string, category?: any): PlatformAccessory\n      </p>\n      <p>For use in Platform plugins only.</p>\n      <p>\n        Creates a new platform accessory. It will not be active until you register the created accessory with\n        <a routerLink=\"/reference/API.registerPlatformAccessories\">API.registerPlatformAccessories</a>.\n      </p>\n      <pre><code [languages]=\"['javascript']\" [highlight]=\"platformAccessoryExample\"></code></pre>\n    </app-api-reference-entry>\n\n    <app-api-reference-entry method=\"PlatformAccessory.addService\">\n      <p class=\"text-info\">\n        PlatformAccessory.addService(service: Service, ...constructorArgs: any[]): Service\n      </p>\n      <p>\n        Adds a new service to a platform accessory.\n      </p>\n      <pre><code [languages]=\"['javascript']\" [highlight]=\"hapServiceExample\"></code></pre>\n      <p>\n        If you are adding more than one service of the same type to an accessory, you will need\n        to give the service a name and \"subtype\".\n      </p>\n      <pre><code [languages]=\"['javascript']\" [highlight]=\"hapAddServiceSubtypeExample\"></code></pre>\n    </app-api-reference-entry>\n\n    <app-api-reference-entry method=\"PlatformAccessory.getService\">\n      <p class=\"text-info\">\n        PlatformAccessory.getService(name: string | T): any\n      </p>\n      <p>\n        Returns an existing service from the platform accessory.\n      </p>\n      <pre><code [languages]=\"['javascript']\" [highlight]=\"hapGetServiceExample\"></code></pre>\n      <p>\n        If you have added more than one service of the same type to an accessory, you will need\n        to get the service using the name you defined when adding it.\n      </p>\n      <pre><code [languages]=\"['javascript']\" [highlight]=\"hapGetServiceSubtypeExample\"></code></pre>\n    </app-api-reference-entry>\n\n    <app-api-reference-entry method=\"PlatformAccessory.removeService\">\n      <p class=\"text-info\">\n        PlatformAccessory.removeService(service: Service): void\n      </p>\n      <p>\n        Removes the service from the platform accessory.\n      </p>\n    </app-api-reference-entry>\n\n    <app-api-reference-entry method=\"PlatformAccessory.context\">\n      <p class=\"text-info\">\n        PlatformAccessory.context\n      </p>\n      <p>\n        Store custom data with accessory that will persist through Homebridge restarts.\n      </p>\n      <pre><code [languages]=\"['javascript']\" [highlight]=\"platformAccessoryContextExample\"></code></pre>\n    </app-api-reference-entry>\n\n    <app-api-reference-entry method=\"PlatformAccessory.services\">\n      <p class=\"text-info\">\n        PlatformAccessory.services: Service[]\n      </p>\n      <p>\n        An array of services currently added to the accessory.\n      </p>\n    </app-api-reference-entry>\n\n    <app-api-reference-entry method=\"Service.getCharacteristic\">\n      <p class=\"text-info\">\n        Service.getCharacteristic: (name: string | T) => Characteristic\n      </p>\n      <p>\n        Returns the requested Characteristic for the service.\n      </p>\n      <pre><code [languages]=\"['javascript']\" [highlight]=\"serviceGetCharacteristicExample\"></code></pre>\n\n    </app-api-reference-entry>\n\n    <app-api-reference-entry method=\"Service.setCharacteristic\">\n      <p class=\"text-info\">\n        Service.setCharacteristic: (name: string | T, value: CharacteristicValue) => Characteristic\n      </p>\n      <div class=\"alert alert-primary\" role=\"alert\">\n        Calling <a routerLink=\"/reference/Service.setCharacteristic\">Service.setCharacteristic</a> will trigger the \"set\"\n        handler if it exists and may lead to unexpected results, depending on your use case, you may wish to use the \n        <a routerLink=\"/reference/Service.updateCharacteristic\">Service.updateCharacteristic</a> method instead.\n      </div>\n      <p>\n        Set the characteristic value.\n      </p>\n      <pre><code [languages]=\"['javascript']\" [highlight]=\"serviceSetCharacteristicExample\"></code></pre>\n\n    </app-api-reference-entry>\n\n    <app-api-reference-entry method=\"Service.updateCharacteristic\">\n      <p class=\"text-info\">\n        Service.updateCharacteristic: (name: string | T, value: CharacteristicValue) => Characteristic\n      </p>\n      <p>\n        Updates the characteristic value. This can be used to update the state of a characteristic at any time,\n        for example, when triggering a motion sensor.\n      </p>\n      <pre><code [languages]=\"['javascript']\" [highlight]=\"serviceUpdateCharacteristicExample\"></code></pre>\n    \n    </app-api-reference-entry>\n\n  </section>\n\n</article>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IntroductionComponent } from './introduction/introduction.component';\nimport { ServiceComponent } from './service/service.component';\nimport { CharacteristicComponent } from './characteristic/characteristic.component';\nimport { ApiReferenceComponent } from './api-reference/api-reference.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: IntroductionComponent,\n  },\n  {\n    path: 'reference',\n    component: ApiReferenceComponent,\n  },\n  {\n    path: 'reference/:anchor',\n    component: ApiReferenceComponent,\n  },\n  {\n    path: 'service',\n    redirectTo: 'service/AccessControl'\n  },\n  {\n    path: 'service/:serviceName',\n    component: ServiceComponent,\n  },\n  {\n    path: 'characteristic',\n    redirectTo: 'characteristic/AccessControlLevel'\n  },\n  {\n    path: 'characteristic/:characteristicName',\n    component: CharacteristicComponent,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes,  {useHash: true, scrollPositionRestoration: 'top'})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { HapService } from './hap.service';\nimport { Router, NavigationEnd } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  constructor(\n    public hapService: HapService,\n    router: Router,\n  ) {\n\n    router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        if (window.innerWidth >= 1200) {\n          return;\n        }\n        const sidebar = document.getElementById('docs-sidebar');\n        if (sidebar && sidebar.classList.contains('sidebar-visible')) {\n          sidebar.classList.remove('sidebar-visible');\n          sidebar.classList.add('sidebar-hidden');\n        }\n      }\n    });\n\n  }\n\n}\n","\n \n  <header class=\"header fixed-top\">\n    <div class=\"branding docs-branding\">\n      <div class=\"container-fluid position-relative py-2\">\n        <div class=\"docs-logo-wrapper\">\n          <button id=\"docs-sidebar-toggler\" class=\"docs-sidebar-toggler docs-sidebar-visible mr-2 d-xl-none\"\n            type=\"button\">\n            <span></span>\n            <span></span>\n            <span></span>\n          </button>\n          <div class=\"site-logo\">\n            <a class=\"navbar-brand\" routerLink=\"/\">\n              <img class=\"logo-icon mr-2\" src=\"assets/images/homebridge-color-round.svg\" width=\"40px\" alt=\"logo\">\n              <span class=\"logo-text\">\n                Homebridge <span class=\"text-alt\"> API</span>\n              </span>\n            </a>\n          </div>\n        </div>\n        <!--//docs-logo-wrapper-->\n        <div class=\"docs-top-utilities d-flex justify-content-end align-items-center\">\n          <div class=\"top-search-box d-none d-lg-flex\">\n            <app-search class=\"w-100\"></app-search>\n          </div>\n\n          <ul class=\"social-list list-inline mx-md-3 mx-lg-5 mb-0 d-none d-lg-flex\">\n            <li class=\"list-inline-item\"><a href=\"https://github.com/homebridge\"><i class=\"fab fa-github fa-fw\"></i></a></li>\n            <li class=\"list-inline-item\"><a href=\"https://discord.gg/kqNCe2D\"><i class=\"fab fa-discord fa-fw\"></i></a></li>\n            <li class=\"list-inline-item\"><a href=\"https://www.reddit.com/r/homebridge/\"><i class=\"fab fa-reddit fa-fw\"></i></a></li>\n          </ul>\n          <!--//social-list-->\n\n        </div>\n        <!--//docs-top-utilities-->\n      </div>\n      <!--//container-->\n    </div>\n    <!--//branding-->\n  </header>\n  <!--//header-->\n\n  <div class=\"docs-wrapper\" *ngIf=\"hapService.ready\">\n    <app-sidebar></app-sidebar>\n    \n    <div class=\"docs-content\">\n      <div class=\"container\">\n        <router-outlet></router-outlet>\n\n        <footer class=\"footer\">\n          <div class=\"container text-center py-5\">\n            <!--/* This template is free as long as you keep the footer attribution link.\n              If you'd like to use the template without the attribution link, you can buy\n              the commercial license via our website: themes.3rdwavemedia.com\n              Thank you for your support. :) */-->\n            <small class=\"copyright\">\n              <a class=\"theme-link\" target=\"_blank\" href=\"https://themes.3rdwavemedia.com/bootstrap-templates/product/coderdocs-free-bootstrap-4-documentation-template-for-software-projects/\">CoderDocs</a>\n              theme designed with\n              <i class=\"fas fa-heart\" style=\"color: #fb866a;\"></i>\n              by\n              <a class=\"theme-link\" target=\"_blank\" href=\"http://themes.3rdwavemedia.com\" target=\"_blank\">Xiaoying Riley</a>\n              for developers\n            </small>\n\n            <ul class=\"social-list list-unstyled pt-4 mb-0\">\n              <li class=\"list-inline-item\"><a href=\"https://github.com/homebridge\"><i class=\"fab fa-github fa-fw\"></i></a></li>\n              <li class=\"list-inline-item\"><a href=\"https://discord.gg/kqNCe2D\"><i class=\"fab fa-discord fa-fw\"></i></a></li>\n              <li class=\"list-inline-item\"><a href=\"https://www.reddit.com/r/homebridge/\"><i class=\"fab fa-reddit fa-fw\"></i></a></li>\n            </ul>\n            <!--//social-list-->\n          </div>\n        </footer>\n      </div>\n    </div>\n  </div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HighlightModule } from 'ngx-highlightjs';\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { IntroductionComponent } from './introduction/introduction.component';\nimport { CharacteristicComponent } from './characteristic/characteristic.component';\nimport { ServiceComponent } from './service/service.component';\nimport { ApiReferenceComponent } from './api-reference/api-reference.component';\nimport { ApiReferenceEntryComponent } from './api-reference-entry/api-reference-entry.component';\nimport { SearchComponent } from './search/search.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SidebarComponent,\n    IntroductionComponent,\n    ServiceComponent,\n    CharacteristicComponent,\n    ApiReferenceComponent,\n    ApiReferenceEntryComponent,\n    SearchComponent,\n  ],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TypeaheadModule.forRoot(),\n    HttpClientModule,\n    HighlightModule,\n    AppRoutingModule,\n  ],\n  bootstrap: [\n    AppComponent\n  ],\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Title } from '@angular/platform-browser';\n\nimport { HapService, Characteristic, Service } from '../hap.service';\n\n@Component({\n  selector: 'app-characteristic',\n  templateUrl: './characteristic.component.html',\n  styleUrls: ['./characteristic.component.scss']\n})\nexport class CharacteristicComponent implements OnInit {\n  public characteristicName: string;\n  public characteristic: Characteristic;\n\n  public usedBy: Service[];\n\n  constructor(\n    private currentRoute: ActivatedRoute,\n    private hapService: HapService,\n    private titleService: Title,\n  ) { }\n\n  ngOnInit(): void {\n    this.currentRoute.paramMap.subscribe(params => {\n      this.characteristicName = params.get('characteristicName');\n      this.characteristic = this.hapService.getCharacteristicsByName(this.characteristicName);\n      this.usedBy = this.hapService.getServiceTypesUsedByCharacteristic(this.characteristic.UUID);\n\n      this.titleService.setTitle(`Homebridge API - ${this.characteristicName}`);\n    });\n  }\n\n  get characteristicPermissions() {\n    return this.characteristic.props.perms.map(x => this.hapService.perms[x]).join(', ');\n  }\n\n}\n","<article class=\"docs-article\" id=\"section-1\">\n  <header class=\"docs-header\">\n    <h1>\n      {{ characteristic?.displayName }}\n    </h1>\n    <p>\n      UUID: {{ characteristic.UUID }}\n    </p>\n  </header>\n\n  <section>\n    <h3>Properties</h3>\n    <table class=\"table table-striped mt-3\">\n      <tbody>\n        <tr>\n          <th scope=\"row\" width=\"25%\">Name</th>\n          <td>Characteristic.{{ characteristic.name }}</td>\n        </tr>\n        <tr>\n          <th scope=\"row\">Format</th>\n          <td>{{ characteristic.props.format }}</td>\n        </tr>\n        <tr *ngIf=\"characteristic.props.unit\">\n          <th scope=\"row\">Unit</th>\n          <td>{{ characteristic.props.unit }}</td>\n        </tr>\n        <tr *ngIf=\"characteristic.props.minValue !== null\">\n          <th scope=\"row\">Min Value</th>\n          <td>{{ characteristic.props.minValue }}</td>\n        </tr>\n        <tr *ngIf=\"characteristic.props.maxValue !== null\">\n          <th scope=\"row\">Max Value</th>\n          <td>{{ characteristic.props.maxValue }}</td>\n        </tr>\n        <tr *ngIf=\"characteristic.props.minStep !== null\">\n          <th scope=\"row\">Min Step</th>\n          <td>{{ characteristic.props.minStep }}</td>\n        </tr>\n        <tr *ngIf=\"characteristic.props.minStep !== null\">\n          <th scope=\"row\">Min Step</th>\n          <td>{{ characteristic.props.minStep }}</td>\n        </tr>\n        <tr *ngIf=\"characteristic.props.perms\">\n          <th scope=\"row\">Permissions</th>\n          <td>{{ characteristicPermissions }}</td>\n        </tr>\n      </tbody>\n    </table>\n  </section>\n\n  <section *ngIf=\"characteristic.constValues.length\">\n    <h3>Constants</h3>\n    <table class=\"table table-striped mt-3\">\n      <tbody>\n        <tr *ngFor=\"let prop of characteristic.constValues\">\n          <th scope=\"row\" width=\"25%\">{{ prop.key }}</th>\n          <td>Characteristic.{{ characteristic.name }}.{{ prop.key }}</td>\n          <td>{{ prop.value }}</td>\n        </tr>\n      </tbody>\n    </table>\n  </section>\n\n  <section *ngIf=\"usedBy.length\">\n    <h3>Services</h3>\n\n    <p>\n      <em>These services use the {{ characteristic.displayName }} as either optional or required characteristics:</em>\n    </p>\n\n    <ul>\n      <li *ngFor=\"let service of usedBy\">\n        <a [routerLink]=\"['/service', service.name]\">{{ service.displayName }}</a>\n      </li>\n    </ul>\n  </section>\n\n</article>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, Observer } from 'rxjs';\n\nexport interface Service {\n  name: string;\n  displayName: string;\n  UUID: string;\n  requiredCharacteristics: string[];\n  optionalCharacteristics: string[];\n}\n\nexport interface Characteristic {\n  name: string;\n  displayName: string;\n  UUID: string;\n  props: {\n    format: string;\n    unit: string;\n    minValue: number,\n    maxValue: number,\n    minStep: number,\n    perms: string[],\n  };\n  constValues: {\n    key: string,\n    value: string,\n  }[];\n  validValues?: number[];\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HapService {\n  public ready = false;\n  public services: Service[];\n  public characteristics: Characteristic[];\n\n  public perms = {\n    pr: 'Paired Read',\n    pw: 'Paired Write',\n    ev: 'Events',\n    aa: 'Additional Authorization',\n    tw: 'Timed Write',\n    hd: 'Hidden',\n    wr: 'Write Response',\n  }\n\n  searchProvider: Observable<any>;\n\n  constructor(\n    private httpClient: HttpClient,\n  ) {\n    this.load();\n\n\n  }\n\n  load() {\n    Promise.all([\n      this.httpClient.get('assets/services.json').toPromise(),\n      this.httpClient.get('assets/characteristics.json').toPromise(),\n    ]).then(([services, characteristics]) => {\n      this.services = services as Service[];\n      this.characteristics = characteristics as Characteristic[];\n      this.ready = true;\n    });\n  }\n\n  getServiceByName(serviceName: string) {\n    return this.services.find(x => x.name === serviceName);\n  }\n\n  getServiceByUUID(uuid: string) {\n    return this.services.find(x => x.UUID === uuid);\n  }\n\n  getCharacteristicsByName(characteristicName: string) {\n    return this.characteristics.find(x => x.name === characteristicName);\n  }\n\n  getCharacteristicsByUUID(uuid: string) {\n    return this.characteristics.find(x => x.UUID === uuid);\n  }\n\n  getServiceTypesUsedByCharacteristic(uuid: string) {\n    const required = this.services.filter(x => x.requiredCharacteristics.includes(uuid));\n    const optional = this.services.filter(x => x.optionalCharacteristics.includes(uuid));\n    return required.concat(optional);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-introduction',\n  templateUrl: './introduction.component.html',\n  styleUrls: ['./introduction.component.scss']\n})\nexport class IntroductionComponent implements OnInit {\n\n  constructor(\n    private titleService: Title,\n  ) { }\n\n  ngOnInit(): void {\n    this.titleService.setTitle(`Homebridge API`);\n  }\n\n}\n","<article class=\"docs-article\" id=\"section-1\">\n  <header class=\"docs-header\">\n    <h1>Homebridge Plugin Docs</h1>\n    <section class=\"docs-intro\">\n      <p>\n        Work in progress.\n      </p>\n    </section>\n    <!--//docs-intro-->\n    </header>\n\n</article>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, Observer, of } from 'rxjs';\nimport { switchMap, debounceTime } from 'rxjs/operators';\n\nimport { HapService } from '../hap.service';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent implements OnInit {\n  public searchProvider: Observable<any>\n  public query;\n\n  constructor(\n    private hapService: HapService,\n    private router: Router,\n  ) { }\n\n  ngOnInit(): void {\n\n    this.searchProvider = new Observable((observer: Observer<string>) => {\n      observer.next(this.query);\n    }).pipe(\n      debounceTime(200),\n      switchMap((query: string) => {\n\n        query = query.toLocaleLowerCase();\n\n        const matchingServices = this.hapService.services.filter((x) => {\n          return x.displayName.toLowerCase().indexOf(query) > -1 ||\n            x.name.toLowerCase().indexOf(query) > -1 ||\n            x.UUID.toLowerCase() === query;\n        });\n\n        const matchingCharacteristics = this.hapService.characteristics.filter((x) => {\n          return x.displayName.toLowerCase().indexOf(query) > -1 ||\n            x.name.toLowerCase().indexOf(query) > -1 ||\n            x.UUID.toLowerCase() === query;\n        });\n\n        const results = [];\n\n        results.push(...matchingServices.map(x => {\n          return {\n            routerLink: ['/service', x.name],\n            label: `Service: ${x.displayName}`\n          }\n        }));\n\n        results.push(...matchingCharacteristics.map(x => {\n          return {\n            routerLink: ['/characteristic', x.name],\n            label: `Characteristic: ${x.displayName}`\n          }\n        }));\n\n        return of(results);\n      })\n    )\n  }\n\n  onSelect(event) {\n    this.router.navigate(event.item.routerLink);\n    this.query = null;\n  }\n\n}\n","<form class=\"search-form\">\n  <input type=\"text\" placeholder=\"Search services and characteristics...\" name=\"search\" class=\"form-control search-input\"\n    [(ngModel)]=\"query\" [typeahead]=\"searchProvider\"  [typeaheadAsync]=\"true\" typeaheadOptionField=\"label\" (typeaheadOnSelect)=\"onSelect($event)\">\n  <button type=\"submit\" class=\"btn search-btn\" value=\"Search\"><i class=\"fas fa-search\"></i></button>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Title } from '@angular/platform-browser';\n\nimport { HapService, Service, Characteristic } from '../hap.service';\n\n@Component({\n  selector: 'app-service',\n  templateUrl: './service.component.html',\n  styleUrls: ['./service.component.scss']\n})\nexport class ServiceComponent implements OnInit {\n  public serviceName: string;\n  public service: Service;\n\n  public requiredCharacteristics: Characteristic[];\n  public optionalCharacteristics: Characteristic[];\n\n  public exampleCode: string;\n\n  constructor(\n    private currentRoute: ActivatedRoute,\n    private hapService: HapService,\n    private titleService: Title,\n  ) { }\n\n  ngOnInit(): void {\n    this.currentRoute.paramMap.subscribe(params => {\n      this.serviceName = params.get('serviceName');\n      this.service = this.hapService.getServiceByName(this.serviceName);\n\n      this.requiredCharacteristics = this.service.requiredCharacteristics.map(x => this.hapService.getCharacteristicsByUUID(x));\n      this.optionalCharacteristics = this.service.optionalCharacteristics.map(x => this.hapService.getCharacteristicsByUUID(x));\n\n      this.generateExample();\n\n      this.titleService.setTitle(`Homebridge API - ${this.serviceName}`);\n    });\n  }\n\n  generateExample() {\n    this.exampleCode = `// Example ${this.service.displayName} Plugin\n\nmodule.exports = (api) => {\n  api.registerAccessory('Example${this.serviceName}Plugin', Example${this.serviceName}Accessory);\n};\n\nclass Example${this.serviceName}Accessory {\n\n  constructor(log, config, api) {\n      this.log = log;\n      this.config = config;\n      this.api = api;\n\n      this.Service = this.api.hap.Service;\n      this.Characteristic = this.api.hap.Characteristic;\n\n      // extract name from config\n      this.name = config.name;\n\n      // create a new ${this.service.displayName} service\n      this.service = new this.Service(this.Service.${this.serviceName});\n\n      // create handlers for required characteristics\n${this.generateRequiredBindings(this.requiredCharacteristics)}\n  }\n\n${this.generateMethods(this.requiredCharacteristics)}\n}`\n  }\n\n  generateRequiredBindings(characteristics: Characteristic[]): string {\n    return characteristics.map((x) => {\n      return `      this.service.getCharacteristic(this.Characteristic.${x.name})\n${this.generateGetHandler(x)}${this.generateSetHandler(x)}`\n    }).join('\\n')\n  }\n\n  generateGetHandler(characteristic: Characteristic): string {\n    if (characteristic.props.perms.includes('pr')) {\n      const value =  `        .on('get', this.handle${characteristic.name}Get.bind(this))`;\n      return characteristic.props.perms.includes('pw') ? value + '\\n        ' : value + ';\\n'\n    } else {\n      return `        `\n    }\n  }\n\n  generateSetHandler(characteristic: Characteristic): string {\n    if (characteristic.props.perms.includes('pw')) {\n      return `.on('set', this.handle${characteristic.name}Set.bind(this));\\n`;\n    } else {\n      return ``\n    }\n  }\n\n  generateMethods(characteristics: Characteristic[]) {\n    return characteristics.map((x) => {\n      return `${this.generateGetMethod(x)}${this.generateSetMethod(x)}`\n    }).join('\\n')\n  }\n\n  generateGetMethod(characteristic: Characteristic) {\n    if (characteristic.props.perms.includes('pr')) {\n      return `  /**\n   * Handle requests to get the current value of the \"${characteristic.displayName}\" characteristic\n   */\n  handle${characteristic.name}Get(callback) {\n    this.log.debug('Triggered GET ${characteristic.name}');\n\n    // set this to a valid value for ${characteristic.name}\n    const currentValue = 1;\n\n    callback(null, currentValue);\n  }\\n\\n`\n    } else {\n      return ``\n    }\n  }\n\n  generateSetMethod(characteristic: Characteristic) {\n    if (characteristic.props.perms.includes('pw')) {\n    return `  /**\n   * Handle requests to set the \"${characteristic.displayName}\" characteristic\n   */\n  handle${characteristic.name}Set(value, callback) {\n    this.log.debug('Triggered SET ${characteristic.name}:' value);\n\n    callback(null);\n  }\\n`\n    } else {\n      return ``\n    }\n  }\n\n}\n","<article class=\"docs-article\">\n  <header class=\"docs-header\">\n    <h1>\n      {{ service.displayName }}\n    </h1>\n    <p>\n      UUID: {{ service.UUID }}\n    </p>\n  </header>\n\n  <section>\n    <h3>Required Characteristics</h3>\n\n    <ul>\n      <li *ngFor=\"let characteristic of requiredCharacteristics\">\n          <a [routerLink]=\"['/characteristic', characteristic.name]\">{{ characteristic.displayName}}</a>\n      </li>\n    </ul>\n\n  </section>\n\n    <section *ngIf=\"optionalCharacteristics.length\">\n      <h3>Optional Characteristics</h3>\n    \n      <ul>\n        <li *ngFor=\"let characteristic of optionalCharacteristics\">\n          <a [routerLink]=\"['/characteristic', characteristic.name]\">{{ characteristic.displayName }}</a>\n        </li>\n      </ul>\n    \n    </section>\n\n    <section *ngIf=\"exampleCode\">\n      <h3>Example</h3>\n\n    <div class=\"callout-block callout-block-warning\">\n      <div class=\"content\">\n        <h4 class=\"callout-title\">\n          <span class=\"callout-icon-holder mr-1\">\n            <i class=\"fas fa-info-circle\"></i>\n          </span>\n          Note\n        </h4>\n        <p>\n          The example below is automatically generated and may not be a complete example of what is required to create a working \"{{ service.displayName }}\" Homebridge plugin.\n        </p>\n      </div>\n    </div>\n\n      <div class=\"docs-code-block\">\n        <pre class=\"shadow-lg rounded\"><code [highlight]=\"exampleCode\"></code></pre>\n      </div>\n          \n    \n    </section>\n\n\n</article>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HapService } from '../hap.service';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n  public services;\n  public id = 1;\n\n  constructor(\n    public hapService: HapService,\n    public router: Router,\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"docs-sidebar\" class=\"docs-sidebar\">\n  <div class=\"top-search-box d-lg-none p-3\">\n    <form class=\"search-form\">\n      <input type=\"text\" placeholder=\"Search the docs...\" name=\"search\" class=\"form-control search-input\">\n      <button type=\"submit\" class=\"btn search-btn\" value=\"Search\"><i class=\"fas fa-search\"></i></button>\n    </form>\n  </div>\n  <nav id=\"docs-nav\" class=\"docs-nav navbar\">\n    <ul class=\"section-items list-unstyled nav flex-column pb-3\">\n      <li class=\"nav-item section-title\">\n        <a class=\"nav-link\" [routerLink]=\"['/']\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">\n          <span class=\"theme-icon-holder mr-2\"><i class=\"fas fa-map-signs\" ></i></span>Introduction\n        </a>\n      </li>\n\n      <li class=\"nav-item section-title mt-3\">\n        <a class=\"nav-link\" [routerLink]=\"['/reference']\" routerLinkActive=\"active\">\n          <span class=\"theme-icon-holder mr-2\"><i class=\"fas fa-cog\"></i></span>API Reference\n        </a>\n      </li>\n\n      <li class=\"nav-item section-title mt-3\">\n        <a class=\"nav-link\" [routerLink]=\"['/service']\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: false}\">\n          <span class=\"theme-icon-holder mr-2\"><i class=\"fas fa-lightbulb\"></i></span>Service Types\n        </a>\n      </li>\n\n      <li class=\"nav-item\" *ngFor=\"let service of hapService.services\">\n        <a class=\"nav-link pointer\" [routerLink]=\"['/service', service.name]\" routerLinkActive=\"active\">{{ service.displayName }}</a>\n      </li>\n    </ul>\n  </nav>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}